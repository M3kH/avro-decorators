// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`e2e run 'generate -c <config-path>' for test-app-1 with config in different folder 1`] = `
"{
  \\"type\\": \\"record\\",
  \\"name\\": \\"Fruit\\",
  \\"fields\\": [
    {
      \\"name\\": \\"id\\",
      \\"type\\": \\"int\\"
    },
    {
      \\"name\\": \\"name\\",
      \\"type\\": \\"string\\",
      \\"doc\\": \\"The name of the fruit\\"
    },
    {
      \\"name\\": \\"origin\\",
      \\"type\\": {
        \\"type\\": \\"record\\",
        \\"name\\": \\"Origin\\",
        \\"fields\\": [
          {
            \\"name\\": \\"continent\\",
            \\"type\\": \\"string\\",
            \\"doc\\": \\"The continent the fruit is originally from\\"
          }
        ],
        \\"namespace\\": \\"fruits.meta\\",
        \\"doc\\": \\"An origin location\\"
      },
      \\"doc\\": \\"The origin of the fruit\\"
    },
    {
      \\"name\\": \\"fruitType\\",
      \\"type\\": {
        \\"type\\": \\"enum\\",
        \\"name\\": \\"FruitType\\",
        \\"symbols\\": [
          \\"berry\\",
          \\"tropical\\"
        ]
      }
    },
    {
      \\"name\\": \\"flavours\\",
      \\"type\\": {
        \\"type\\": \\"array\\",
        \\"items\\": \\"string\\"
      },
      \\"default\\": []
    },
    {
      \\"name\\": \\"inventory\\",
      \\"type\\": {
        \\"type\\": \\"map\\",
        \\"values\\": \\"int\\"
      }
    },
    {
      \\"name\\": \\"anything\\",
      \\"type\\": [
        \\"string\\",
        \\"Fruit\\",
        {
          \\"type\\": \\"enum\\",
          \\"name\\": \\"Letter\\",
          \\"symbols\\": [
            \\"A\\",
            \\"B\\",
            \\"C\\"
          ]
        },
        {
          \\"type\\": \\"array\\",
          \\"items\\": \\"string\\"
        },
        {
          \\"type\\": \\"map\\",
          \\"values\\": \\"string\\"
        },
        {
          \\"type\\": \\"fixed\\",
          \\"name\\": \\"MyFixedThing\\",
          \\"size\\": 4
        },
        {
          \\"type\\": \\"record\\",
          \\"name\\": \\"MyInlineRecord\\",
          \\"fields\\": []
        }
      ],
      \\"doc\\": \\"An examplary union\\"
    }
  ]
}
"
`;

exports[`e2e run 'generate' for test-app-1 with config in root 1`] = `
"Printing schemas to stdout, as option 'outDir' is not set in config

Fruit - Fruit.avsc

{
  \\"type\\": \\"record\\",
  \\"name\\": \\"Fruit\\",
  \\"fields\\": [
    {
      \\"name\\": \\"id\\",
      \\"type\\": \\"int\\"
    },
    {
      \\"name\\": \\"name\\",
      \\"type\\": \\"string\\",
      \\"doc\\": \\"The name of the fruit\\"
    },
    {
      \\"name\\": \\"origin\\",
      \\"type\\": {
        \\"type\\": \\"record\\",
        \\"name\\": \\"Origin\\",
        \\"fields\\": [
          {
            \\"name\\": \\"continent\\",
            \\"type\\": \\"string\\",
            \\"doc\\": \\"The continent the fruit is originally from\\"
          }
        ],
        \\"namespace\\": \\"fruits.meta\\",
        \\"doc\\": \\"An origin location\\"
      },
      \\"doc\\": \\"The origin of the fruit\\"
    },
    {
      \\"name\\": \\"fruitType\\",
      \\"type\\": {
        \\"type\\": \\"enum\\",
        \\"name\\": \\"FruitType\\",
        \\"symbols\\": [
          \\"berry\\",
          \\"tropical\\"
        ]
      }
    },
    {
      \\"name\\": \\"flavours\\",
      \\"type\\": {
        \\"type\\": \\"array\\",
        \\"items\\": \\"string\\"
      },
      \\"default\\": []
    },
    {
      \\"name\\": \\"inventory\\",
      \\"type\\": {
        \\"type\\": \\"map\\",
        \\"values\\": \\"int\\"
      }
    },
    {
      \\"name\\": \\"anything\\",
      \\"type\\": [
        \\"string\\",
        \\"Fruit\\",
        {
          \\"type\\": \\"enum\\",
          \\"name\\": \\"Letter\\",
          \\"symbols\\": [
            \\"A\\",
            \\"B\\",
            \\"C\\"
          ]
        },
        {
          \\"type\\": \\"array\\",
          \\"items\\": \\"string\\"
        },
        {
          \\"type\\": \\"map\\",
          \\"values\\": \\"string\\"
        },
        {
          \\"type\\": \\"fixed\\",
          \\"name\\": \\"MyFixedThing\\",
          \\"size\\": 4
        },
        {
          \\"type\\": \\"record\\",
          \\"name\\": \\"MyInlineRecord\\",
          \\"fields\\": []
        }
      ],
      \\"doc\\": \\"An examplary union\\"
    }
  ]
}


"
`;
